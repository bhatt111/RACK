uri "http://TurnstileSystem/CounterApplication" alias trnstlsys.
import "http://Turnstile/DevelopmentPlan".
import "http://Turnstile/CounterApplicationDesignDescription".

Galois is an ORGANIZATION
    has identifier "AGENT-Galois"
    has AGENTS:name "Galois".
  
Mockup is an ACTIVITY
    has identifier "ACTIVITY-Turnstile software data mockup"
    has wasAssociatedWith Galois
    has startedAtTime "2020-06-01 12:00:00".

// The structure of this software is based on the content of the src/ directory.

InputThread is a COMPONENT
    has dataInsertedBy Mockup
    has identifier "InputThread",
	has subcomponentOf CounterApplication.

OutputThread is a COMPONENT
    has dataInsertedBy Mockup
    has identifier "OutputThread",
	has subcomponentOf CounterApplication.

ExecutiveThread is a COMPONENT
    has dataInsertedBy Mockup
    has identifier "ExecutiveThread",
	has subcomponentOf CounterApplication.

// tools and other background

CSourceFile (note "A C language source file")
    is a FORMAT
    has identifier "FORMAT-CSourceFile"
    has dataInsertedBy Mockup.
    
JsonFile (note "JSON data")
    is a FORMAT
    has identifier "FORMAT-JsonFile"
    has dataInsertedBy Mockup.
    
ElfFile (note "ELF object, shared-object, executable")
    is a FORMAT
    has identifier "FORMAT-ElfFile"
    has dataInsertedBy Mockup.
    
ZipFile (note "Compressed file archive")
    is a FORMAT
    has identifier "FORMAT-ZipFile"
    has dataInsertedBy Mockup.
    
   
TarFile (note "File archive")
    is a FORMAT
    has identifier "FORMAT-TarFile"
    has dataInsertedBy Mockup.


tar is a FILE
    has identifier "tar"
    has filename "tar"
    has fileFormat ElfFile
    has dataInsertedBy Mockup.

// input.o

input_c is a C_Code
    has identifier "input_c",
    has filename "input.c",
    has dataInsertedBy Mockup,
    has fileFormat CSourceFile.

input_h is a C_Header
    has identifier "input_h",
    has filename "input.h",
    has dataInsertedBy Mockup,
    has fileFormat CSourceFile.

input_function is a COMPONENT
    has identifier "input_function"
    has dataInsertedBy Mockup
    has componentType SOURCE_FUNCTION
    has sw:name "input"
    has valueType "void()"
    has definedIn input_c.

input_o_Compiling is a SoftwareIntegration
    has identifier "input_o_Compiling",
    has dataInsertedBy Mockup,
    has compiledBy GCC,
    has compileInput input_c,
    has compileInput input_h.

input_o is a FILE
    has identifier "input_o",
    has filename "input.o",
    has dataInsertedBy Mockup,
    has sw:createBy input_o_Compiling
    has fileFormat ElfFile.

// output.o

output_c is a C_Code
    has identifier "output_c",
    has filename "output.c",
    has dataInsertedBy Mockup,
    has fileFormat CSourceFile.
output_h is a C_Header
    has identifier "output_h",
    has filename "output.h",
    has dataInsertedBy Mockup,
    has fileFormat CSourceFile
    has filename "hw.h",
    has dataInsertedBy Mockup,
    has fileFormat CSourceFile,
    has sw:satisfies OUT-LLR-1,
    has sw:satisfies OUT-LLR-2.

output_function is a COMPONENT
    has identifier "output_function"
    has dataInsertedBy Mockup
    has componentType SOURCE_FUNCTION
    has sw:name "output"
    has valueType "void()"
    has definedIn output_c.

CompileWithOptimizations is a FIELD.
LinkerPath is a FIELD.

output_o_Compiling is a SoftwareIntegration
    has identifier "output_o_Compiling",
    has dataInsertedBy Mockup,
    has compileInput output_c,
    has compileInput output_h,
    has compiledBy GCC,
    has hasAttribute (a ATTRIBUTE field CompileWithOptimizations fieldValue "yes"),
    has hasAttribute (a ATTRIBUTE field LinkerPath fieldValue "/path/to/libraries").

output_o is a FILE
    has identifier "output_o",
    has filename "output.o"
    has dataInsertedBy Mockup,
    has sw:createBy output_o_Compiling
    has fileFormat ElfFile.

// hw.o, libhw.so

hw_c is a C_Code
    has identifier "hw_c",
    has filename "hw.c",
    has dataInsertedBy Mockup,
    has fileFormat CSourceFile.
hw_h is a C_Header
    has identifier "hw_h",
    has filename "hw.h",
    has dataInsertedBy Mockup,
    has fileFormat CSourceFile,
    has sw:satisfies IN-LLR-1,
    has sw:satisfies IN-LLR-2,
    has sw:satisfies IN-LLR-3,
    has sw:satisfies IN-LLR-4,
    has sw:satisfies IN-LLR-5,
    has sw:satisfies IN-LLR-6.

hw_o_Compiling is a COMPILE
    has identifier "hw_o_Compiling",
    has dataInsertedBy Mockup,
    has compiledBy GCC,
    has compileInput hw_c,
    has compileInput hw_h.

hw_o is a FILE
    has identifier "hw_o",
    has filename "hw.o",
    has dataInsertedBy Mockup,
    has sw:createBy hw_o_Compiling
    has fileFormat ElfFile.

libhw_so_Compiling is a SoftwareIntegration
    has identifier "libhw_so_Compiling",
    has dataInsertedBy Mockup,
    has compiledBy GCC,
    has compileInput hw_o.

libhw_so is a FILE
    has identifier "libhw_so",
    has filename "libhw.so",
    has dataInsertedBy Mockup,
    has sw:createBy libhw_so_Compiling
    has fileFormat ElfFile.

// counter.exe

counter_c is a C_Code
    has identifier "counter_c",
    has filename "counter.c",
    has dataInsertedBy Mockup,
    has fileFormat CSourceFile.
    
counter_h is a C_Header
    has identifier "counter_h",
    has filename "counter.h",
    has dataInsertedBy Mockup,
    has fileFormat CSourceFile,
    has sw:satisfies EXE-LLR-1,
    has sw:satisfies EXE-LLR-2,
    has sw:satisfies EXE-LLR-3.

main_function is a COMPONENT
    has identifier "main_function"
    has componentType SOURCE_FUNCTION
    has dataInsertedBy Mockup
    has sw:name "main"
    has valueType "int(int argc, char* argv[])"
    has controlFlowsToUnconditionally input_function
    has controlFlowsToUnconditionally output_function
    has definedIn counter_c.

counter_exe_Compiling is a SoftwareIntegration
    has identifier "counter_exe_Compiling",
    has dataInsertedBy Mockup
    has compiledBy GCC,
    has compileInput input_o,
    has compileInput output_o,
    has compileInput libhw_so,
    has compileInput counter_c,
    has compileInput counter_h.

counter_exe is an FILE
    has identifier "counter_exe",
    has filename "counter.exe",
    has dataInsertedBy Mockup
    has sw:createBy counter_exe_Compiling
    has fileFormat ElfFile.

// conf.json

conf_json is a FILE
    has identifier "conf_json"
    has filename "conf.json",
    has dataInsertedBy Mockup
    has fileFormat JsonFile.

// dist.tar.gz

dist_tar is a FILE
    has identifier "dist_tar",
    has filename "dist.tar",
    has dataInsertedBy Mockup,
	has wasGeneratedBy tarPackaging
	has fileFormat TarFile.

tarPackaging is a PACKAGE
    has identifier "tarPackaging",
    has dataInsertedBy Mockup,
    has packagedBy tar,
    has packageInput conf_json,
    has packageInput libhw_so,
    has packageInput counter_exe.

// test.o

test_c is a C_Code
    has identifier "test_c",
    has filename "test.c",
    has dataInsertedBy Mockup,
    has fileFormat CSourceFile.
test_h is a C_Header
    has identifier "test_h",
    has filename "test.h",
    has dataInsertedBy Mockup,
    has fileFormat CSourceFile.

test_exe_Compiling is a SoftwareIntegration
    has identifier "test_exe_Compiling",
    has dataInsertedBy Mockup,
    has compiledBy GCC,
    has compileInput test_c,
    has compileInput test_h.
