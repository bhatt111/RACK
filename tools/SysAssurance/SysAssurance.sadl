//
//
// Copyright Â© 2020 General Electric Company
//
// Author: Abha Moitra
// Date: 2020-04-09
// Last update: 2020-04-24
//
//
 
 uri "http://sadl.org/RACK/SysAssurance" alias SA.
 
// This model defines the top-most System Assurance Ontology. 

Thing is a class
	described by name with a single value of type string
	described by description with a single value of type string
	described by creator with values of type string  // can be viewed as "author" as well
	described by initialCreationDate with a single value of type string
	described by updateDate with values of type string.

// do we want to have Thing be broken into AbstractThing and PhysicalThing?
	
SystemAssurance is a type of Thing // should we add mission in this (which may include operational activity etc.)?
	described by system with a single value of type System
	described by artifact with values of type Artifact
	described by management with a single value of type Management.

Artifact is a type of Thing
	described by location with a single value of type string.

Standard is a type of  Artifact, 
	must be one of {DO-178C, MIL-HDBK-516, CNSSI-1253, NIST-SP-800-53, MIL-STD-882E,
		 			ARP-4761, ARP-4754A, JointSystemsSoftwareSafetyHandbook, STANG-4671}.

Management is a type of Thing
	described by target with a single value of type System.

ProjectMgmt is a type of Management, 
	must be one of {CertificationLiaison, ChangeReqMgmt, CommunicationPlan, ConfigMgmt, IntegrationMgmt, 
					ProblemReportingMgmt, ProjMgmt, SupplierMgmt, SwConfigMgmt}.
ProjectDocs is a type of Management, 
	must be one of {CodingGuidelines, CustomerDocs, ProceduralDocs, ProcessDocs, RegulatoryDocs, SupplierDocs, WhitePapers}.
Review is a type of Management, 
	must be one of {CertReview, ChangeReview, CodeReview, DocReview, SoftwareEngDesignReview, TechnicalDataReview}.

System is a type of Thing	
	described by versionNumber with a single value of type integer
	described by dateOfLastUpdate with a single value of type integer
	described by opEnvironment with a single value of type Artifact // could later provide more structure for this
	described by component with values of type Component.

Component is a type of System
	described by compType with a single value of type CompType
	described by parent with a single value of type Component
	described by child with values of type Component.

CompType is a class.
{Software, Hardware, Hybrid} are types of CompType.

Software is a class,
	described by swType with values of type SoftwareType
	described by lang with values of type Lang
	described by imports with values of type Component
	described by libraries with values of type Library
	described by fieldLoadable with a single value of type boolean
	described by optionSelectable with a single value of type boolean
	described by userModifiable with a single value of type boolean
	described by reusable with a single value of type boolean
	described by deactivatedfeatures with a single value of type boolean.

SoftwareType is a class, must be one of {COTS, Sourced, InternallyDeveloped}.
Lang is a class, must be one of {C, Ada}.

Library is a class. //give some instances of this	

// define hardware, hybrid, firmware
