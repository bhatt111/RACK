:- multifile data_instance/4, data_get/4.

% These are the various facts that might be emitted by the databin
% wrappers that will be recognized here.

:- discontiguous tar_access/3,
                 build_inputs/2,
                 build_outputs/2,
                 build_from/2.

%% Recognizers for matching tool output data

data_instance('SOFTWARE#FILE', load_data, Instance, InstanceData) :-
    tar_access(_Nonce, File, create),  %% KWQ: file_to_fpath with a Dir
    rack_namespace(NS),
    ns_ref(NS, File, Instance),
    InstanceData = createdFile(File, tar).

%%

data_instance('SOFTWARE#FILE', load_data, Instance, InstanceData) :-
    build_inputs(Nonce, Inputs),
    build_from(Nonce, Dir),
    member(Input, Inputs),
    rack_namespace(NS),
    ns_ref(NS, Nonce, I), append_fld(I, Input, Instance),
    InstanceData = sw_file_data(Dir, Input).

data_instance('SOFTWARE#FILE', load_data, Instance, InstanceData) :-
    build_outputs(Nonce, Outputs),
    build_from(Nonce, Dir),
    member(Output, Outputs),
    rack_namespace(NS),
    ns_ref(NS, Nonce, O), append_fld(O, Output, Instance),
    InstanceData = sw_file_data(Dir, Output).

data_get('SOFTWARE#FILE', 'SOFTWARE#filename', createdFile(File, tar), Value) :-
    atom_string(File, Value).
