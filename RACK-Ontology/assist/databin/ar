#!/usr/bin/env bash

. $(dirname $0)/rackfuncs.sh

tool=$(basename $0)
realtool=$(find_in_path_remainder $tool)
nonce="n$(date +%s)-$$"

archive_file_idx=2
creating=0

if grep -q a <(echo "$1") ; then
    archive_file_idx=3
elif grep -q b <(echo "$1") ; then
    archive_file_idx=3
fi

if grep -q c <(echo "$1"); then
    creating=1
elif grep -q q <(echo "$1"); then
    creating=1
elif grep -q r <(echo "$1"); then
    creating=1
fi

if (( $creating )) ; then
    outf=${!archive_file_idx}
    rackf="$(dirname ${outf})/.$(basename ${outf}).rack"

    (
        export IFS=","
        shift $archive_file_idx
        shift 1
        echo ":- multifile build_with/5, build_from/2, build_inputs/2, build_outputs/2, build_start/2, build_finished/3."
        echo "build_with(${nonce@Q}, ar," ${tool@Q}, ${realtool@Q}", [] )."
        echo "build_from(${nonce@Q}, '"$(top_rel_curdir)"')."
        echo "build_inputs(${nonce@Q}, [ ${*@Q} ])."
        echo "build_outputs(${nonce@Q}, [ ${outf@Q} ])."
        echo "build_start(${nonce@Q}, $(date +'date_time(%Y,%m,%d,%H,%M,%S,%z)'))."
    ) > ${rackf}

    update_make_steps

    when_done() {
        rval=$?
        echo "build_finished(${nonce@Q}, $(date +'date_time(%Y,%m,%d,%H,%M,%S,%z)'), $rval)." >> ${rackf}
    }
    trap when_done EXIT

    echo "${rackf}" >> /tmp/ar.log
fi

$realtool ${*}

