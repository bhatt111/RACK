uri "http://TurnstileSystem/GenerateCSV" alias gencsv.
import "http://TurnstileSystem/CounterApplication".
import "http://TurnstileSystem/CounterApplicationLLR".
import "http://TurnstileSystem/CounterApplicationRequirements".
import "http://TurnstileSystem/CounterApplicationTesting".
import "http://TurnstileSystem/CounterApplicationUnitTesting".
import "http://TurnstileSystem/HazardAssessment".
import "http://TurnstileSystem/InGateRequirement". //rename as we use InGateRequirements.sadl and in it we have InGateRequirement
import "http://TurnstileSystem/Turnstiles".

// directly importing all files, even if some are being imported by other files

// list all SYSTEM
Write: data
{
  Ask: "select distinct ?systemId ?partOfId ?producedById ?providesId ?requiresId where
       {?SYSTEM <rdf:type> <SYSTEM>
        . ?SYSTEM <identifier> ?systemId
        . OPTIONAL{?SYSTEM <partOf> ?partOf . ?partOf <identifier> ?partOfId}
        . OPTIONAL{?SYSTEM <sys:producedBy> ?producedBy . ?producedBy <identifier> ?producedById}
        . OPTIONAL{?SYSTEM <provides> ?provides . ?provides <identifier> ?providesId}
        . OPTIONAL{?SYSTEM <requires> ?requires . ?requires <identifier> ?requiresId}
       } order by ?systemId".
} to "models/TurnstileSystem/Data/SYSTEM.csv".

// list all INTERFACE; note we do not have identifier related to "identifiedBy"
Write: data
{
  Ask: "select distinct ?identifier ?sourceId ?destinationId ?identifiedBy where
       {  ?INTERFACE <rdf:type> <INTERFACE>
        . ?INTERFACE <identifier> ?identifier
        . OPTIONAL{?INTERFACE <sys:source> ?source . ?source <identifier> ?sourceId}
        . OPTIONAL{?INTERFACE <destination> ?destination . ?destination <identifier> ?destinationId}
        . OPTIONAL{?INTERFACE <identifiedBy> ?identifiedBy}
       } order by ?identifier".
} to "models/TurnstileSystem/Data/INTERFACE.csv".

// list all HAZARD
Write: data
{
  Ask: "select distinct ?identifier ?definition ?systemSourceId ?hazardSourceId where
       {  ?HAZARD <rdf:type> <HAZARD> . ?HAZARD <identifier> ?identifier
        . ?HAZARD <definition> ?definition
        . OPTIONAL{?HAZARD <H:source> ?system . ?system <rdf:type> <SYSTEM> . ?system <identifier> ?systemSourceId}
        . OPTIONAL{?HAZARD <H:source> ?hazard . ?hazard <rdf:type> <HAZARD> . ?hazard <identifier> ?hazardSourceId}
       } order by ?identifier".
} to "models/TurnstileSystem/Data/HAZARD.csv".

// list all REQUIREMENT
Write: data
{
  Ask: "select distinct ?identifier ?governsId ?satisfiesId ?mitigatesId ?createdById ?text where
       {  ?REQUIREMENT <rdf:type> <REQUIREMENT>
        . ?REQUIREMENT <identifier> ?identifier
        . OPTIONAL{?REQUIREMENT <Rq:governs> ?governs . ?governs <identifier> ?governsId}
        . OPTIONAL{?REQUIREMENT <Rq:satisfies> ?satisfies . ?satisfies <identifier> ?satisfiesId}
        . OPTIONAL{?REQUIREMENT <Rq:mitigates> ?mitigates . ?mitigates <identifier> ?mitigatesId}
        . OPTIONAL{?REQUIREMENT <Rq:createdBy> ?createdBy . ?createdBy <identifier> ?createdById}
        . OPTIONAL{?REQUIREMENT <text> ?text}
       } order by ?identifier".
} to "models/TurnstileSystem/Data/REQUIREMENT.csv".

// list all DATA_DICTIONARY_TERM
// Note that a single DATA_DICTIONARY_TERM can have multiple providedBy and multiple consumedBy; and so we get multiple rows
Write: data
{
  Ask: "select distinct ?identifier ?requirementProvidedById ?requirementConsumedById ?interfaceProvidedById ?interfaceConsumedById ?createdById ?text where
       {  ?DATA_DICTIONARY_TERM <rdf:type> <DATA_DICTIONARY_TERM>
        . ?DATA_DICTIONARY_TERM <identifier> ?identifier
        . OPTIONAL{?DATA_DICTIONARY_TERM <providedBy> ?req  . ?req <rdf:type> <REQUIREMENT>  . ?req <identifier>  ?requirementProvidedById}
        . OPTIONAL{?DATA_DICTIONARY_TERM <consumedBy> ?req2 . ?req2 <rdf:type> <REQUIREMENT> . ?req2 <identifier> ?requirementConsumedById}
        . OPTIONAL{?DATA_DICTIONARY_TERM <providedBy> ?int  . ?int <rdf:type> <INTERFACE>  . ?int <identifier>  ?interfaceProvidedById}
        . OPTIONAL{?DATA_DICTIONARY_TERM <consumedBy> ?int2 . ?int2 <rdf:type> <INTERFACE> . ?int2 <identifier> ?interfaceConsumedById}
        . OPTIONAL{?DATA_DICTIONARY_TERM <mitigates> ?createdBy . ?createdBy <identifier> ?createdById}
        . OPTIONAL{?DATA_DICTIONARY_TERM <text> ?text}
      } order by ?identifier".
} to "models/TurnstileSystem/Data/DATA_DICTIONARY_TERM.csv".

// list all TEST
Write: data
{
  Ask: "select distinct ?identifier ?verifies ?producedBy where
       {  ?TEST <rdf:type> <TEST>
        . ?TEST <identifier> ?identifier
        . OPTIONAL{?TEST <verifies> ?verifies . ?verifies <identifier> ?verifiesId}
        . OPTIONAL{?TEST <tst:producedBy> ?producedBy . ?producedBy <identifier> ?producedById}
       } order by ?identifier".
} to "models/TurnstileSystem/Data/TEST.csv".

// list all FORMAT
Write: data
{
  Ask: "select distinct ?identifier where
        {  ?FORMAT <rdf:type> <FORMAT>
         . ?FORMAT <identifier> ?identifier
        } order by ?identifier".
} to "models/TurnstileSystem/Data/FORMAT.csv".

// list test results; TEST_EXECUTION does not have identifier
Write: data
{
   Ask: "select ?identifier ?tcId ?result ?testExe where
         {  ?tr <rdf:type> <TEST_RESULT>
          . ?tr <identifier> ?identifier
          . ?tr <confirms> ?tc . ?tc <identifier> ?tcId
          . ?tr <result> ?result
          . ?tr <executedBy> ?testExe
         } order by ?testExe ?identifier".
} to "models/TurnstileSystem/Data/TEST_RESULTS.csv".

// list all AGENT
Write: data
{
  Ask: "select distinct ?identifier where
        {  ?AGENT <rdf:type> <AGENT>
         . ?AGENT <identifier> ?identifier
        } order by ?identifier".
} to "models/TurnstileSystem/Data/AGENT.csv".

// list all COMPILE
Write: data
{
  Ask: "select distinct ?identifier ?performedById ?compiledById ?compileInputId where
        {  ?COMPILE <rdf:type> <COMPILE>
         . ?COMPILE <identifier> ?identifier
         . OPTIONAL{  ?COMPILE <sw:performedBy> ?performedBy
                    . ?performedBy <rdf:type> <AGENT>
                    . ?performedBy <identifier> ?performedById
                   }
         . OPTIONAL{  ?COMPILE <compiledBy> ?compiledBy
                    . ?compiledBy <rdf:type> <ENTITY>
                    . ?compiledBy <identifier> ?compiledById
                   }
         . OPTIONAL{  ?COMPILE <compileInput> ?compileInput
                    . ?compileInput <rdf:type> <ENTITY>
                    . ?compileInput <identifier> ?compileInputId
                   }
        } order by ?identifier".
} to "models/TurnstileSystem/Data/COMPILE.csv".

// list all PACKAGE
Write: data
{
  Ask: "select distinct ?identifier ?performedById ?packagedById ?packageInputId where
        {  ?PACKAGE <rdf:type> <PACKAGE>
        . ?PACKAGE <identifier> ?identifier
        . OPTIONAL{ ?PACKAGE <sw:performedBy> ?performedBy
                  . ?performedBy <rdf:type> <AGENT>
                  . ?performedBy <identifier> ?performedById
                  }
        . OPTIONAL{ ?PACKAGE <packagedBy> ?packagedBy
                  . ?packagedBy <rdf:type> <ENTITY>
                  . ?packagedBy <identifier> ?packagedById
                  }
        . OPTIONAL{ ?PACKAGE <packageInput> ?packageInput
                  . ?packageInput <rdf:type> <ENTITY>
                  . ?packageInput <identifier> ?packageInputId
                  }
        } order by ?identifier".
} to "models/TurnstileSystem/Data/PACKAGE.csv".

// list all FILE
Write: data
{
  Ask: "select distinct ?identifier ?createById ?formatId ?filename where
        {  ?FILE <rdf:type> <FILE>
         . ?FILE <identifier> ?identifier
		 . OPTIONAL{ ?FILE <filename> ?filename }
         . OPTIONAL{  ?FILE <sw:createBy> ?createBy
                    . ?createBy <rdf:type> <COMPILE>
                    . ?createBy <identifier> ?createById
                   }
         . OPTIONAL{  ?FILE <fileFormat> ?format
                    . ?format <rdf:type> <FORMAT>
                    . ?format <identifier> ?formatId
                    }
        } order by ?identifier".
} to "models/TurnstileSystem/Data/FILE.csv".

// list all COMPONENT
Write: data
{
  Ask: "select distinct ?identifier ?name ?componentTypeId ?valueType ?instantiateId ?definedInId ?mentionId ?subcomponentId ?requirementId ?annotationId ?controlFlowsToConditionallyId ?controlFlowsToUnconditionallyId  where
        { ?COMPONENT <rdf:type> <COMPONENT>
        . ?COMPONENT <identifier> ?identifier
		. ?COMPONENT <componentType> ?componentType
	    . ?componentType <rdf:type> <COMPONENT_TYPE>
        . ?componentType <identifier> ?componentTypeId
		. OPTIONAL{ ?COMPONENT <sw:name> ?name }
		. OPTIONAL{ ?COMPONENT <valueType> ?valueType }
        . OPTIONAL{ ?COMPONENT <instantiates> ?instantiates
                  . ?instantiates <rdf:type> <ENTITY>
                  . ?instantiates <identifier> ?instantiatesId
                  }
        . OPTIONAL{ ?COMPONENT <definedIn> ?definedIn
                  . ?definedIn <rdf:type> <FILE>
                  . ?definedIn <identifier> ?definedInId
                  }
        . OPTIONAL{ ?COMPONENT <mentions> ?mentions
                  . ?mentions <rdf:type> <ENTITY>
                  . ?mentions <identifier> ?mentionsId
                  }
        . OPTIONAL{ ?COMPONENT <subcomponentOf> ?subcomponentOf
                  . ?subcomponentOf <rdf:type> <COMPONENT>
                  . ?subcomponentOf <identifier> ?subcomponentOfId
                  }
        . OPTIONAL{ ?COMPONENT <requirements> ?requirements
                  . ?requirements <rdf:type> <ENTITY>
                  . ?requirements <identifier> ?requirementsId
                  }
        . OPTIONAL{ ?COMPONENT <annotations> ?annotations
                  . ?annotations <rdf:type> <ENTITY>
                  . ?annotations <identifier> ?annotationsId
                  }
        . OPTIONAL{ ?COMPONENT <controlFlowsToUnconditionally> ?controlFlowsToUnconditionally
                  . ?controlFlowsToUnconditionally <rdf:type> <COMPONENT>
                  . ?controlFlowsToUnconditionally <identifier> ?controlFlowsToUnconditionallyId
                  }
        . OPTIONAL{ ?COMPONENT <controlFlowsToConditionally> ?controlFlowsToConditionally
                  . ?controlFlowsToConditionally <rdf:type> <COMPONENT>
                  . ?controlFlowsToConditionally <identifier> ?controlFlowsToConditionallyId
                  }
        } order by ?identifier".
} to "models/TurnstileSystem/Data/COMPONENT.csv".

// list all CONFIDENCE_ASSESSMENT
Write: data
{
  Ask: "select distinct ?assessmentId ?createById ?assesseeId ?belief ?disbelief ?uncertainty where
        {  ?CONFIDENCE_ASSESSMENT <rdf:type> <CONFIDENCE_ASSESSMENT>
         . ?CONFIDENCE_ASSESSMENT <identifier> ?assessmentId
         . OPTIONAL{  ?CONFIDENCE_ASSESSMENT <CONFIDENCE:createBy> ?createBy
                    . ?createBy <rdf:type> <ACTIVITY>
                    . ?createBy <identifier> ?createById
                   }
         . OPTIONAL{  ?CONFIDENCE_ASSESSMENT <CONFIDENCE:assesses> ?assessee
                    . ?assessee <rdf:type> <TEST_RESULT>
                    . ?assessee <identifier> ?assesseeId
                   }
         . OPTIONAL{  ?CONFIDENCE_ASSESSMENT <CONFIDENCE:belief> ?belief }
         . OPTIONAL{  ?CONFIDENCE_ASSESSMENT <CONFIDENCE:disbelief> ?disbelief }
         . OPTIONAL{  ?CONFIDENCE_ASSESSMENT <CONFIDENCE:uncertainty> ?uncertainty }
        } order by ?identifier".
} to "models/TurnstileSystem/Data/CONFIDENCE_ASSESSMENT.csv".
